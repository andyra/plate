
// Title:      Mixin: rem with px fallback
// Version:    0.0.1
// Author:     Andy Smith
// Source:     http://github/com/andyra/proto

// Provide a px fallback for browsers ltIE9 if $type-unit is set to 'rem'
// @source: http://hugogiraudel.com/2013/03/18/ultimate-rem-mixin/

@mixin rem($property, $values) {
  // Create empty variables
  $legacy: ();
  $modern: ();

  @each $value in $values {
    @if $value == 0 or type-of($value) != "number" {
      $legacy: append($legacy, $value);
      $modern: append($modern, $value);
    }

    @else {
      $unit: unit($value);      // just the unit
      $num: strip-unit($value); // just the number

      // Add pixels as-is to legacy array and convert to rems for modern array
      @if $unit == "px" {
        $legacy: append($legacy, $value);
        $modern: append($modern, ($num / $font-size-base + rem));
      }

      // Add ems asâ€“is to both arrays
      @if $unit == "em" {
        $legacy: append($legacy, $value);
        $modern: append($modern, $value);
      }

      // Convert rems to px for legacy array and add as-is to modern array
      @if $unit == "rem" {
        $legacy: append($legacy,  ($num * $font-size-base + px));
        $modern: append($modern, $value);
      }
    }
  }

  // If unit($font-size-base) is legacy compatible (px, em), just use the legacy
  // array. If using rems, but both arrays as a fallback for older browsers.
  @if unit($font-size-base) != "rem" {
    #{$property}: $legacy;
  } @else { // put out px and rems
    #{$property}: $legacy;
    #{$property}: $modern;
  }
}

// Aliases for more readable SASS
// ----------------------------------------------------------------------------

@mixin font-size($values) {
  @include rem(font-size, $values);
}
