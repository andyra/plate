
// Browser support
// ----------------------------------------------------------------------------

// If legacy == false
// 1. Use functions
//    - Valid $type-unit: px, em, rem
//    - Single css file (styles.css)

// If legacy == true
// 1. Use functions
//    - Valid $type-unit: px, em
//    - Two css files (styles.css, styles.ie.css)
// 2. Use mixins
//    - Valid $type-unit: px, em, rem
//    - Single css file (styles.css)

// Font families
// ----------------------------------------------------------------------------

// @todo: Include an average range of appropriate line heights here
// @todo: should we split p things by "base" and "heading?"
//        base font, color, line-height
//        heading font, color, line-height

$font-family-sans:        $helvetica !default;
$font-family-serif:       $georgia !default;
$font-family-monospace:   $monospace !default;

$font-family-base:        $font-family-sans !default;
$font-family-heading:     $font-family-base !default;

// Custom fonts
// To create custom fonts, uncomment the font-face mixin below and fill with the
// information specific to your font. Use this font in the font stacks above to
// allow fallbacks in the event the font files don't load in old/weird browsers.
// Add as many custom fonts here as you see fit.
// ex: $font-family-sans: "Droid Sans", $helvetica;

// @include font-face($font-family, $file-path, $weight: normal, $style: normal)

// Weights
// ----------------------------------------------------------------------------

// Weights
$font-weight-thin:        100 !default;
$font-weight-light:       300 !default;
$font-weight-normal:      400 !default;
$font-weight-medium:      500 !default;
$font-weight-bold:        700 !default;
$font-weight-black:       900 !default;

// Colors
// ----------------------------------------------------------------------------

$text-color:              $gray-dark !default;
$heading-color:           $gray-dark !default;

// Type sizing
// ----------------------------------------------------------------------------

$type-unit:                 rem !default;           // rem, px, em
$type-ratio:                $golden-ratio !default; // Will we actually use this?
$font-size-base:            16;                     // Unitless value.

$font-size-xxxl:            60 !default;
$font-size-xxl:             42 !default;
$font-size-xl:              32 !default;
$font-size-lg:              21 !default;
$font-size-md:              $font-size-base !default;
$font-size-sm:              14 !default;
$font-size-xs:              12 !default;

// Single unit
// Good for px, em, and rem w/o fallback.
.lead {
  font-size: $font-size-sm;
}

// Double unit
// Good for everything
.lead {
  @include font-size($font-size-sm);
}

// Unit conversion
// @source: http://davidwalsh.name/rem-px-browser-function-sass

// If you don't use units anywhere in your styles, you can change all of them
// at the flip of a switch ($type-unit: px, em, rem)

// For a single value, you can use a function, but you'll need
// two separate css files (styles.css, styles-ie.css)
$font-size-sm: u(20);

.lead {
  font-size: $font-size-sm;
  margin: u(20 0 0 20); // without units, uses default unit value (px, em, or rem)
}

// If you want a single file, you'll have to double up on rules to support ie
// and use mixins instead of functions

$font-size-sm: u(20); // if legacy != true => 2rem
                      // if legacy == true => 20px

.lead {
  @include font-size($font-size-sm);
  // @include u(margin, 20 0 0 20);
}


// Line height
// ----------------------------------------------------------------------------

// Body line height should change based on how wide the content is.
// @source: http://www.pearsonified.com/typography/

$line-height-base:          $golden-ratio !default;     // Unitless. Based on the font size of the element (16 * 1.5 = 24)
$line-height-computed:      type-unit($font-size-base * $line-height-base) !default;

// Set line height in pixels if $type-unit == 'px'
@if $type-unit == px {
  $line-height-computed: ($font-size-base * $line-height-base)#{px};
}
