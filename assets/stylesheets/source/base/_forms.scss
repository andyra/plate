// ============================================================================
// Forms
// ============================================================================

// Variables
// ----------------------------------------------------------------------------

// Legend
$legend-color:                  $text-color;
$legend-border-color:           $border-color-base;

// Inputs
$input-height:                  ($line-height-base + ($padding-base-vertical * 2) + 2) !default; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
$input-bg:                      white !default;
$input-bg-disabled:             $gray-lighter !default;
$input-color:                   $gray !default;
$input-color-placeholder:       $gray-light !default;
$input-border:                  $border-color-base !default;
$input-border-radius:           $border-radius-base !default;
$input-border-size:             $border-size-base !default;
$input-border-focus:            $component-active-color !default;

// Non-control elements
// ----------------------------------------------------------------------------

fieldset {
  @include padding(1);
  border: 0;
  margin: 0;
  min-width: 0;
}

legend {
  @include margin-bottom(1);
  border: 0;
  border-bottom: $border-size-base solid $legend-border-color;
  color: $legend-color;
  display: block;
  padding: 0;
  width: 100%;
}

label {
  display: inline-block;
  font-weight: bold;

  &.required:after {
    content: "*";
    color: $state-danger-text;
    display: inline-block;
  }
}

.form-help {
  color: $text-muted-color;
}

// Form controls
// ----------------------------------------------------------------------------

// Shared size and type resets for form controls. Apply `.form-control` to any
// of the following form controls:
// select, textarea, input (types = text, password, datetime, datetime-local,
// date, month, time, week, number, email, url, search, tel, color)

.form-control {
  @include font-size($font-size-base);
  @include placeholder();
  @include transition(border-color $easing-base $timing-base);
  background-color: $input-bg;
  background-image: none; // reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border-radius: $input-border-radius;
  border: $input-border-size solid $input-border;
  color: $input-color;
  display: block;
  height: $input-height;
  padding: $padding-base-vertical $padding-base-horizontal;
  width: 100%;

  &:focus {
    @include box-shadow(0 0 8px rgba($input-border-focus, .6));
    border-color: $input-border-focus;
    outline: 0;
  }

  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    cursor: not-allowed;
    background-color: $input-bg-disabled;
    opacity: 1; // iOS fix for unreadable disabled content
  }
}

// Sizing
// ----------------------------------------------------------------------------

// States
// ----------------------------------------------------------------------------

// Append & Prepend
// ----------------------------------------------------------------------------

// Layouts
// ----------------------------------------------------------------------------

// Default stacked forms
.form { }

// Inline forms
.form-inline { }

// Aligned forms
.form-aligned { }

// Grouped inputs @source: http://purecss.io/forms/#grouped-inputs
.input-group { }

// Normalize specific inputs
// ----------------------------------------------------------------------------

// Some basic normalization is required to ensure optimum display with or
// without those classes to better address browser inconsistencies.

// Search
//
// This overrides the extra rounded corners on search inputs in iOS so that our
// `.form-control` class can properly style them. Note that this cannot simply
// be added to `.form-control` as it's not specific enough. For details, see
// https://github.com/twbs/bootstrap/issues/11586.
// Override content-box in Normalize (* isn't specific enough)

input[type="search"] {
  -webkit-appearance: none;
  @include box-sizing(border-box);
}

// File
// Set the height of file controls to match text inputs
input[type="file"] {
  @include tab-focus();
  display: block;
}

// Range
// Make range inputs behave like textual form controls
input[type="range"] {
  display: block;
  width: 100%;
}

// Select
// Make multiple select elements height not fixed
select[multiple],
select[size] {
  height: auto;
}

// Textarea
// Reset height for `textarea`s
textarea.form-control {
  height: auto;
}

// Date
// In Mobile Safari, date inputs require a pixel line-height that matches the
// given height of the input.
input[type="date"] {
  line-height: $input-height;
}

// Checkboxes & Radios
// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
  @include tab-focus();
  margin: 4px 0 0;
  margin-top: 1px \9; /* IE8-9 */
  line-height: normal;
}
